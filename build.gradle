plugins {
  id "net.ltgt.apt-eclipse" version "0.21"
  id "net.ltgt.apt-idea" version "0.21"
  id "com.github.johnrengelman.shadow" version "5.0.0"
  id "application"
  id "groovy"
}

version "0.1"
group "training.video.player"

repositories {
  mavenCentral()
  maven { url "https://jcenter.bintray.com" }
}

configurations {
  // for dependencies that are needed for development only
  developmentOnly
}

dependencies {
  annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
  annotationProcessor "io.micronaut:micronaut-inject-java"
  annotationProcessor "io.micronaut:micronaut-validation"
  annotationProcessor "io.micronaut.configuration:micronaut-openapi"
  developmentOnly "io.micronaut:micronaut-runtime-osx:1.2.5"
  implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
  implementation "io.micronaut:micronaut-management"
  implementation "io.micronaut:micronaut-inject"
  implementation "io.micronaut:micronaut-validation"
  implementation "io.micronaut:micronaut-runtime"
  implementation "io.micronaut.configuration:micronaut-micrometer-core"
  implementation "io.micronaut:micronaut-tracing"
  implementation "javax.annotation:javax.annotation-api"
  implementation "io.swagger.core.v3:swagger-annotations"
  implementation "io.micronaut:micronaut-http-client"
  implementation "io.micronaut.configuration:micronaut-micrometer-registry-prometheus"
  implementation "io.micronaut:micronaut-http-server-netty"
  implementation 'org.gitlab4j:gitlab4j-api:4.12.17'
  implementation 'io.micronaut:micronaut-views'
  runtimeOnly "io.jaegertracing:jaeger-thrift"
  runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
  runtimeOnly 'org.thymeleaf:thymeleaf:3.0.11.RELEASE'

  runtimeOnly 'org.webjars:bootstrap:4.1.3'
  runtimeOnly 'org.webjars:font-awesome:4.7.0'
  runtimeOnly 'org.webjars:jquery:3.1.1-1'
  runtimeOnly 'org.webjars:popper.js:1.15.0'
  runtimeOnly 'org.webjars:metisMenu:2.7.0'
  runtimeOnly 'org.webjars:jQuery-slimScroll:1.3.8'
  runtimeOnly 'org.webjars:pace:1.0.2'


  testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
  testAnnotationProcessor "io.micronaut:micronaut-inject-java"
  testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
  testImplementation "org.junit.jupiter:junit-jupiter-api"
  testImplementation "io.micronaut.test:micronaut-test-junit5"
  testImplementation("org.spockframework:spock-core") {
    exclude group: "org.codehaus.groovy", module: "groovy-all"
  }
  testImplementation "io.micronaut:micronaut-inject-groovy"
  testImplementation "io.micronaut.test:micronaut-test-spock"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
  testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.5.0"
}

test.classpath += configurations.developmentOnly

mainClassName = "training.video.player.Application"

// use JUnit 5 platform
test {
  useJUnitPlatform()
}

tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
  options.compilerArgs.add('-parameters')
}

shadowJar {
  mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
